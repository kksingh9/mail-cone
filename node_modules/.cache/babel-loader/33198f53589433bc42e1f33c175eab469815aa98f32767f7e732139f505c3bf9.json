{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\GNS\\\\Desktop\\\\gmail-clone\\\\src\\\\component\\\\EmailList\\\\EmailList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport \"./EmailList.css\";\nimport EmailSetting from '../EmailSetting/EmailSetting';\nimport EmailType from '../EmailType/EmailType';\nimport EmailBody from '../EmailBody/EmailBody';\nimport { inboxmailSliceActions } from '../../store/inboxmail';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EmailList() {\n  _s();\n  const dispatch = useDispatch();\n  const inboxmail = useSelector(state => state.inboxmail.inboxmail);\n  useEffect(() => {\n    (async () => {\n      let set;\n      try {\n        const response = await fetch(\"https://mail-box-43bb3-default-rtdb.firebaseio.com/mail.json\");\n        const data = await response.json();\n        let newArray = [];\n        for (let key in data) {\n          newArray.push({\n            id: key,\n            name: data[key].email,\n            subject: data[key].subject,\n            description: data[key].description\n          });\n        }\n        dispatch(inboxmailSliceActions.addmail(newArray));\n      } catch (err) {\n        console.log(err.message);\n      }\n    })();\n  }, [dispatch]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"emaillist\",\n    children: [/*#__PURE__*/_jsxDEV(EmailSetting, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(EmailType, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), inboxmail.map(item => /*#__PURE__*/_jsxDEV(EmailBody, {\n      name: item.name,\n      subject: item.subject,\n      description: item.description,\n      time: \"03:20 PM\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n_s(EmailList, \"G39O9rhNXNuOFqMxUDD+hZmwb48=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = EmailList;\nexport default EmailList;\nvar _c;\n$RefreshReg$(_c, \"EmailList\");","map":{"version":3,"names":["React","useEffect","EmailSetting","EmailType","EmailBody","inboxmailSliceActions","useDispatch","useSelector","jsxDEV","_jsxDEV","EmailList","_s","dispatch","inboxmail","state","set","response","fetch","data","json","newArray","key","push","id","name","email","subject","description","addmail","err","console","log","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","item","time","_c","$RefreshReg$"],"sources":["C:/Users/GNS/Desktop/gmail-clone/src/component/EmailList/EmailList.js"],"sourcesContent":["import React, { useEffect } from 'react'\r\nimport \"./EmailList.css\";\r\nimport EmailSetting from '../EmailSetting/EmailSetting';\r\nimport EmailType from '../EmailType/EmailType';\r\nimport EmailBody from '../EmailBody/EmailBody';\r\nimport { inboxmailSliceActions } from '../../store/inboxmail';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nfunction EmailList() {\r\n  const dispatch = useDispatch();\r\n  const inboxmail = useSelector(state => state.inboxmail.inboxmail)\r\n  useEffect(() => {\r\n      (async() => {\r\n        let set\r\n        try{\r\n       const response = await fetch(\"https://mail-box-43bb3-default-rtdb.firebaseio.com/mail.json\")\r\n       const data = await response.json();\r\n          let newArray = [];\r\n          for(let key in data){\r\n              newArray.push({\r\n                id: key,\r\n                name: data[key].email,\r\n                subject: data[key].subject,\r\n                description: data[key].description,\r\n              })\r\n          }\r\n          dispatch(inboxmailSliceActions.addmail(newArray));\r\n        }catch(err){\r\n            console.log(err.message);\r\n        }\r\n      })();\r\n  },[dispatch])\r\n  return (\r\n    <div className='emaillist'>\r\n      <EmailSetting />\r\n      <EmailType />\r\n     {inboxmail.map((item) => (\r\n      <EmailBody name={item.name} subject={item.subject} description={item.description} time=\"03:20 PM\"/>\r\n      ))} \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default EmailList;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAO,iBAAiB;AACxB,OAAOC,YAAY,MAAM,8BAA8B;AACvD,OAAOC,SAAS,MAAM,wBAAwB;AAC9C,OAAOC,SAAS,MAAM,wBAAwB;AAC9C,SAASC,qBAAqB,QAAQ,uBAAuB;AAC7D,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvD,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EACnB,MAAMC,QAAQ,GAAGN,WAAW,CAAC,CAAC;EAC9B,MAAMO,SAAS,GAAGN,WAAW,CAACO,KAAK,IAAIA,KAAK,CAACD,SAAS,CAACA,SAAS,CAAC;EACjEZ,SAAS,CAAC,MAAM;IACZ,CAAC,YAAW;MACV,IAAIc,GAAG;MACP,IAAG;QACJ,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,8DAA8D,CAAC;QAC5F,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;QAC/B,IAAIC,QAAQ,GAAG,EAAE;QACjB,KAAI,IAAIC,GAAG,IAAIH,IAAI,EAAC;UAChBE,QAAQ,CAACE,IAAI,CAAC;YACZC,EAAE,EAAEF,GAAG;YACPG,IAAI,EAAEN,IAAI,CAACG,GAAG,CAAC,CAACI,KAAK;YACrBC,OAAO,EAAER,IAAI,CAACG,GAAG,CAAC,CAACK,OAAO;YAC1BC,WAAW,EAAET,IAAI,CAACG,GAAG,CAAC,CAACM;UACzB,CAAC,CAAC;QACN;QACAf,QAAQ,CAACP,qBAAqB,CAACuB,OAAO,CAACR,QAAQ,CAAC,CAAC;MACnD,CAAC,QAAMS,GAAG,EAAC;QACPC,OAAO,CAACC,GAAG,CAACF,GAAG,CAACG,OAAO,CAAC;MAC5B;IACF,CAAC,EAAE,CAAC;EACR,CAAC,EAAC,CAACpB,QAAQ,CAAC,CAAC;EACb,oBACEH,OAAA;IAAKwB,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACxBzB,OAAA,CAACP,YAAY;MAAAiC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAChB7B,OAAA,CAACN,SAAS;MAAAgC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EACbzB,SAAS,CAAC0B,GAAG,CAAEC,IAAI,iBACnB/B,OAAA,CAACL,SAAS;MAACoB,IAAI,EAAEgB,IAAI,CAAChB,IAAK;MAACE,OAAO,EAAEc,IAAI,CAACd,OAAQ;MAACC,WAAW,EAAEa,IAAI,CAACb,WAAY;MAACc,IAAI,EAAC;IAAU;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CACjG,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAAC3B,EAAA,CAjCQD,SAAS;EAAA,QACCJ,WAAW,EACVC,WAAW;AAAA;AAAAmC,EAAA,GAFtBhC,SAAS;AAmClB,eAAeA,SAAS;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}