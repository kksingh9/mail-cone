{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\GNS\\\\Desktop\\\\gmail-clone\\\\src\\\\component\\\\EmailList\\\\EmailList.js\",\n  _s = $RefreshSig$();\nimport React, { Fragment, useEffect } from 'react';\nimport \"./EmailList.css\";\nimport EmailSetting from '../EmailSetting/EmailSetting';\nimport EmailType from '../EmailType/EmailType';\nimport EmailBody from '../EmailBody/EmailBody';\nimport { inboxmailSliceActions } from '../../store/inboxmail';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EmailList() {\n  _s();\n  const dispatch = useDispatch();\n  const inboxmail = useSelector(state => state.inboxmail.inboxmail);\n  useEffect(() => {\n    let setint = setInterval(() => {\n      (async () => {\n        try {\n          const response = await fetch(\"https://mail-box-43bb3-default-rtdb.firebaseio.com/mail.json\");\n          const data = await response.json();\n          let newArray = [];\n          for (let key in data) {\n            newArray.push({\n              id: key,\n              name: data[key].email,\n              subject: data[key].subject,\n              description: data[key].description,\n              time: data[key].time\n            });\n          }\n          dispatch(inboxmailSliceActions.addmail(newArray));\n        } catch (err) {\n          console.log(err.message);\n        }\n      })();\n    }, 1000);\n    return () => setInterval(setint);\n  }, [dispatch]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"emaillist\",\n    children: [/*#__PURE__*/_jsxDEV(EmailSetting, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(EmailType, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), inboxmail.map(item => /*#__PURE__*/_jsxDEV(Fragment, {\n      children: /*#__PURE__*/_jsxDEV(EmailBody, {\n        id: item.id,\n        name: item.name,\n        subject: item.subject,\n        description: item.description,\n        time: new Date(item.time).toLocaleTimeString()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 6\n      }, this)\n    }, item.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n_s(EmailList, \"G39O9rhNXNuOFqMxUDD+hZmwb48=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = EmailList;\nexport default EmailList;\nvar _c;\n$RefreshReg$(_c, \"EmailList\");","map":{"version":3,"names":["React","Fragment","useEffect","EmailSetting","EmailType","EmailBody","inboxmailSliceActions","useDispatch","useSelector","Link","jsxDEV","_jsxDEV","EmailList","_s","dispatch","inboxmail","state","setint","setInterval","response","fetch","data","json","newArray","key","push","id","name","email","subject","description","time","addmail","err","console","log","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","item","Date","toLocaleTimeString","_c","$RefreshReg$"],"sources":["C:/Users/GNS/Desktop/gmail-clone/src/component/EmailList/EmailList.js"],"sourcesContent":["import React, { Fragment, useEffect } from 'react'\r\nimport \"./EmailList.css\";\r\nimport EmailSetting from '../EmailSetting/EmailSetting';\r\nimport EmailType from '../EmailType/EmailType';\r\nimport EmailBody from '../EmailBody/EmailBody';\r\nimport { inboxmailSliceActions } from '../../store/inboxmail';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction EmailList() {\r\n  const dispatch = useDispatch();\r\n  const inboxmail = useSelector(state => state.inboxmail.inboxmail)\r\n  useEffect(() => {\r\n    let setint = setInterval(() => {\r\n      (async() => {\r\n        \r\n       try{\r\n       const response = await fetch(\"https://mail-box-43bb3-default-rtdb.firebaseio.com/mail.json\")\r\n       const data = await response.json();\r\n          let newArray = [];\r\n          for(let key in data){\r\n              newArray.push({\r\n                id: key,\r\n                name: data[key].email,\r\n                subject: data[key].subject,\r\n                description: data[key].description,\r\n                time: data[key].time,\r\n              })\r\n          }\r\n          dispatch(inboxmailSliceActions.addmail(newArray));\r\n        }catch(err){\r\n            console.log(err.message);\r\n        }\r\n       })();\r\n      }, 1000);\r\n      return () => setInterval(setint);\r\n  },[dispatch])\r\n  return (\r\n    <div className='emaillist'>\r\n      <EmailSetting />\r\n      <EmailType />\r\n     {inboxmail.map((item) => (\r\n      <Fragment key={item.id}>\r\n    \r\n     <EmailBody id={item.id} name={item.name} subject={item.subject} description={item.description} time={new Date(item.time).toLocaleTimeString()}/>\r\n\r\n     </Fragment>\r\n      ))} \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default EmailList;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}