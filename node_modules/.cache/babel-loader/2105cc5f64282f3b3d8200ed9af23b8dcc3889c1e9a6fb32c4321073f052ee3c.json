{"ast":null,"code":"var _s = $RefreshSig$();\nconst {\n  useEffect\n} = require(\"react\");\nconst {\n  useState\n} = require(\"react\");\nconst useFetch = url => {\n  _s();\n  const [emailData, setEmailData] = useState(null);\n  useEffect(() => {\n    let setint = setInterval(() => {\n      const fetchData = async () => {\n        try {\n          const response = await fetch(url);\n          const data = await response.json();\n          let newArray = [];\n          for (let key in data) {\n            newArray.push({\n              id: key,\n              email: data[key].email,\n              subject: data[key].subject,\n              description: data[key].description,\n              time: data[key].time,\n              localtime: data[key].localtime,\n              read: data[key].read,\n              quantity: data[key].quantity\n            });\n          }\n          setEmailData(newArray);\n        } catch (err) {\n          console.log(err.message);\n        }\n      };\n      // if(initial){\n      //   initial=false;\n      //   return;\n      // }\n      fetchData();\n    }, 2000);\n    return () => setInterval(setint);\n  }, [url]);\n  return [emailData];\n};\n_s(useFetch, \"HWCWZ+S6eyZUvKaFArDbtFREwRk=\");\nexport default useFetch;","map":{"version":3,"names":["useEffect","require","useState","useFetch","url","_s","emailData","setEmailData","setint","setInterval","fetchData","response","fetch","data","json","newArray","key","push","id","email","subject","description","time","localtime","read","quantity","err","console","log","message"],"sources":["C:/Users/GNS/Desktop/gmail-clone/src/component/customHook/useFetch.js"],"sourcesContent":["const { useEffect } = require(\"react\");\r\nconst { useState } = require(\"react\")\r\n\r\nconst useFetch = (url) => {\r\n    const [emailData, setEmailData] = useState(null);\r\n\r\n    useEffect(() => {\r\n        let setint = setInterval(() => {\r\n        const fetchData = async () => {\r\n          try {\r\n            const response = await fetch(\r\n              url\r\n            );\r\n            const data = await response.json();\r\n            let newArray = [];\r\n            for (let key in data) {\r\n              newArray.push({\r\n                id: key,\r\n                email: data[key].email,\r\n                subject: data[key].subject,\r\n                description: data[key].description,\r\n                time: data[key].time,\r\n                localtime: data[key].localtime,\r\n                read:data[key].read,\r\n                quantity: data[key].quantity,\r\n              });\r\n            }\r\n            setEmailData(newArray)\r\n          } catch (err) {\r\n            console.log(err.message);\r\n          }\r\n        }\r\n        // if(initial){\r\n        //   initial=false;\r\n        //   return;\r\n        // }\r\n        fetchData();\r\n        }, 2000);\r\n        return () => setInterval(setint);\r\n      }, [url]);\r\n\r\n    return [emailData];\r\n};\r\n\r\nexport default useFetch ;"],"mappings":";AAAA,MAAM;EAAEA;AAAU,CAAC,GAAGC,OAAO,CAAC,OAAO,CAAC;AACtC,MAAM;EAAEC;AAAS,CAAC,GAAGD,OAAO,CAAC,OAAO,CAAC;AAErC,MAAME,QAAQ,GAAIC,GAAG,IAAK;EAAAC,EAAA;EACtB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGL,QAAQ,CAAC,IAAI,CAAC;EAEhDF,SAAS,CAAC,MAAM;IACZ,IAAIQ,MAAM,GAAGC,WAAW,CAAC,MAAM;MAC/B,MAAMC,SAAS,GAAG,MAAAA,CAAA,KAAY;QAC5B,IAAI;UACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAC1BR,GACF,CAAC;UACD,MAAMS,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;UAClC,IAAIC,QAAQ,GAAG,EAAE;UACjB,KAAK,IAAIC,GAAG,IAAIH,IAAI,EAAE;YACpBE,QAAQ,CAACE,IAAI,CAAC;cACZC,EAAE,EAAEF,GAAG;cACPG,KAAK,EAAEN,IAAI,CAACG,GAAG,CAAC,CAACG,KAAK;cACtBC,OAAO,EAAEP,IAAI,CAACG,GAAG,CAAC,CAACI,OAAO;cAC1BC,WAAW,EAAER,IAAI,CAACG,GAAG,CAAC,CAACK,WAAW;cAClCC,IAAI,EAAET,IAAI,CAACG,GAAG,CAAC,CAACM,IAAI;cACpBC,SAAS,EAAEV,IAAI,CAACG,GAAG,CAAC,CAACO,SAAS;cAC9BC,IAAI,EAACX,IAAI,CAACG,GAAG,CAAC,CAACQ,IAAI;cACnBC,QAAQ,EAAEZ,IAAI,CAACG,GAAG,CAAC,CAACS;YACtB,CAAC,CAAC;UACJ;UACAlB,YAAY,CAACQ,QAAQ,CAAC;QACxB,CAAC,CAAC,OAAOW,GAAG,EAAE;UACZC,OAAO,CAACC,GAAG,CAACF,GAAG,CAACG,OAAO,CAAC;QAC1B;MACF,CAAC;MACD;MACA;MACA;MACA;MACAnB,SAAS,CAAC,CAAC;IACX,CAAC,EAAE,IAAI,CAAC;IACR,OAAO,MAAMD,WAAW,CAACD,MAAM,CAAC;EAClC,CAAC,EAAE,CAACJ,GAAG,CAAC,CAAC;EAEX,OAAO,CAACE,SAAS,CAAC;AACtB,CAAC;AAACD,EAAA,CAvCIF,QAAQ;AAyCd,eAAeA,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}