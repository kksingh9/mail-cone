{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialInboxmailState = {\n  inboxmail: [],\n  emaildetail: null,\n  totalmail: 0\n};\nconst inboxmailSlice = createSlice({\n  name: \"inboxmail\",\n  initialState: initialInboxmailState,\n  reducers: {\n    addmail(state, action) {\n      state.inboxmail = action.payload;\n      let sum = state.inboxmail.reduce((curr, prev) => {\n        return curr + parseInt(prev.quantity);\n      }, 0);\n      state.totalmail = sum;\n    },\n    emailDetail(state, action) {\n      let obj = action.payload;\n      let newobj = state.inboxmail.find(item => item.id === obj.id);\n      if (newobj) {\n        newobj.read = true;\n      }\n      state.emaildetail = newobj;\n      if (newobj.quantity === 1) {\n        newobj.quantity--;\n      }\n    }\n  }\n});\nexport const inboxmailSliceActions = inboxmailSlice.actions;\nexport default inboxmailSlice.reducer;","map":{"version":3,"names":["createSlice","initialInboxmailState","inboxmail","emaildetail","totalmail","inboxmailSlice","name","initialState","reducers","addmail","state","action","payload","sum","reduce","curr","prev","parseInt","quantity","emailDetail","obj","newobj","find","item","id","read","inboxmailSliceActions","actions","reducer"],"sources":["C:/Users/GNS/Desktop/gmail-clone/src/store/inboxmail.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst initialInboxmailState = {\r\n  inboxmail: [],\r\n  emaildetail: null,\r\n  totalmail: 0,\r\n};\r\n\r\nconst inboxmailSlice = createSlice({\r\n  name: \"inboxmail\",\r\n  initialState: initialInboxmailState,\r\n  reducers: {\r\n    addmail(state, action) {\r\n      state.inboxmail = action.payload\r\n      \r\n      let sum = state.inboxmail.reduce((curr, prev) => {\r\n        return curr + parseInt(prev.quantity);\r\n      }, 0);\r\n      state.totalmail = sum;\r\n    },\r\n    emailDetail(state, action) {\r\n      let obj = action.payload;\r\n      let newobj = state.inboxmail.find((item) => item.id === obj.id);\r\n      if (newobj) {\r\n        newobj.read = true;\r\n      }\r\n      state.emaildetail = newobj;\r\n      if (newobj.quantity === 1) {\r\n        newobj.quantity--;\r\n      }\r\n    },\r\n  },\r\n});\r\n\r\nexport const inboxmailSliceActions = inboxmailSlice.actions;\r\nexport default inboxmailSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,qBAAqB,GAAG;EAC5BC,SAAS,EAAE,EAAE;EACbC,WAAW,EAAE,IAAI;EACjBC,SAAS,EAAE;AACb,CAAC;AAED,MAAMC,cAAc,GAAGL,WAAW,CAAC;EACjCM,IAAI,EAAE,WAAW;EACjBC,YAAY,EAAEN,qBAAqB;EACnCO,QAAQ,EAAE;IACRC,OAAOA,CAACC,KAAK,EAAEC,MAAM,EAAE;MACrBD,KAAK,CAACR,SAAS,GAAGS,MAAM,CAACC,OAAO;MAEhC,IAAIC,GAAG,GAAGH,KAAK,CAACR,SAAS,CAACY,MAAM,CAAC,CAACC,IAAI,EAAEC,IAAI,KAAK;QAC/C,OAAOD,IAAI,GAAGE,QAAQ,CAACD,IAAI,CAACE,QAAQ,CAAC;MACvC,CAAC,EAAE,CAAC,CAAC;MACLR,KAAK,CAACN,SAAS,GAAGS,GAAG;IACvB,CAAC;IACDM,WAAWA,CAACT,KAAK,EAAEC,MAAM,EAAE;MACzB,IAAIS,GAAG,GAAGT,MAAM,CAACC,OAAO;MACxB,IAAIS,MAAM,GAAGX,KAAK,CAACR,SAAS,CAACoB,IAAI,CAAEC,IAAI,IAAKA,IAAI,CAACC,EAAE,KAAKJ,GAAG,CAACI,EAAE,CAAC;MAC/D,IAAIH,MAAM,EAAE;QACVA,MAAM,CAACI,IAAI,GAAG,IAAI;MACpB;MACAf,KAAK,CAACP,WAAW,GAAGkB,MAAM;MAC1B,IAAIA,MAAM,CAACH,QAAQ,KAAK,CAAC,EAAE;QACzBG,MAAM,CAACH,QAAQ,EAAE;MACnB;IACF;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAMQ,qBAAqB,GAAGrB,cAAc,CAACsB,OAAO;AAC3D,eAAetB,cAAc,CAACuB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}