{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\GNS\\\\Desktop\\\\gmail-clone\\\\src\\\\component\\\\auth\\\\AuthForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport classes from \"./AuthForm.module.css\";\n//import { Link } from \"react-router-dom/cjs/react-router-dom.min\";\nimport { useDispatch } from \"react-redux\";\nimport { authSliceActions } from \"../../store/auth\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthForm = () => {\n  _s();\n  const [isLogin, setIsLogin] = useState(true);\n  //const isLoggedIn = useSelector(state => state.auth.isAuthenticated)\n  const [isLoading, setIsLoading] = useState(false);\n  const navigate = useHistory();\n  const dispatch = useDispatch();\n  const enterEmailInputRef = useRef();\n  const enterPasswordInputRef = useRef();\n  const enterConfirmPasswordRef = useRef();\n  const SwitchHandler = () => {\n    setIsLogin(prevent => !prevent);\n  };\n  const onSubmitHandler = event => {\n    event.preventDefault();\n    const enteredEmail = enterEmailInputRef.current.value;\n    const enteredPassword = enterPasswordInputRef.current.value;\n    //const enteredConfirmPassword = enterConfirmPasswordRef.current.value;\n    //dispatch(authActions.login());\n    setIsLoading(true);\n    //let url;\n    if (isLogin) {\n      fetch(\"https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyDYe7rxDYbi7WgXlIL3QX92DmYYVyXFWho\", {\n        method: \"POST\",\n        body: JSON.stringify({\n          email: enteredEmail,\n          password: enteredPassword,\n          // passwordE: enteredConfirmPassword,\n          returnSecureToken: true\n        }),\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      }).then(res => {\n        setIsLoading(false);\n        if (res.ok) {\n          return res.json();\n        } else {\n          return res.json().then(data => {\n            let errorMessage = \"Authentication failed\";\n            //   if (data && data.error && data.error.message){\n            //         errorMessage = data.error.message;\n            //   }\n\n            throw new Error(errorMessage);\n          });\n        }\n      }).then(data => {\n        //console.log(data);\n\n        dispatch(authSliceActions.login(data.idToken));\n        navigate.push(\"/\");\n      }).catch(err => {\n        alert(err.message);\n      });\n    } else {\n      fetch(\"https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyDYe7rxDYbi7WgXlIL3QX92DmYYVyXFWho\", {\n        method: \"POST\",\n        body: JSON.stringify({\n          email: enteredEmail,\n          password: enteredPassword,\n          // passwordE: enteredConfirmPassword,\n          returnSecureToken: true\n        }),\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      }).then(res => {\n        setIsLoading(false);\n        if (res.ok) {\n          // return res.json();\n        } else {\n          return res.json().then(data => {\n            let errorMessage = \"Authentication failed\";\n            //   if (data && data.error && data.error.message){\n            //         errorMessage = data.error.message;\n            //   }\n\n            throw new Error(errorMessage);\n          });\n        }\n      }).then(data => {\n        //console.log(data);\n        //dispatch(authActions.login(data.idToken));\n        //navigate.push(\"/navigation/home\");\n      }).catch(err => {\n        alert(err.message);\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classes.authform,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: classes.form,\n      onSubmit: onSubmitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.form,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"Email Id\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"email\",\n          ref: enterEmailInputRef,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.form,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          ref: enterPasswordInputRef,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this), !isLogin && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.form,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"confirmpassword\",\n          children: \"Comfirm Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"confirmpassword\",\n          ref: enterConfirmPasswordRef,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.action,\n        children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 11\n        }, this), !isLoading && /*#__PURE__*/_jsxDEV(\"button\", {\n          children: isLogin ? \"Login\" : \"Create Account\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 11\n        }, this), isLoading && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Sending request...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: SwitchHandler,\n          children: isLogin ? \"Create new account\" : \"Login with existing account\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 114,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthForm, \"ejK1BTFppdUKC2rjiPXX/X0fRvQ=\", false, function () {\n  return [useHistory, useDispatch];\n});\n_c = AuthForm;\nexport default AuthForm;\nvar _c;\n$RefreshReg$(_c, \"AuthForm\");","map":{"version":3,"names":["React","useState","useRef","useHistory","classes","useDispatch","authSliceActions","jsxDEV","_jsxDEV","AuthForm","_s","isLogin","setIsLogin","isLoading","setIsLoading","navigate","dispatch","enterEmailInputRef","enterPasswordInputRef","enterConfirmPasswordRef","SwitchHandler","prevent","onSubmitHandler","event","preventDefault","enteredEmail","current","value","enteredPassword","fetch","method","body","JSON","stringify","email","password","returnSecureToken","headers","then","res","ok","json","data","errorMessage","Error","login","idToken","push","catch","err","alert","message","className","authform","children","form","onSubmit","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","id","ref","required","action","onClick","_c","$RefreshReg$"],"sources":["C:/Users/GNS/Desktop/gmail-clone/src/component/auth/AuthForm.js"],"sourcesContent":["import React, { useState, useRef } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport classes from \"./AuthForm.module.css\";\r\n//import { Link } from \"react-router-dom/cjs/react-router-dom.min\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { authSliceActions } from \"../../store/auth\";\r\n\r\nconst AuthForm = () => {\r\n  const [isLogin, setIsLogin] = useState(true);\r\n  //const isLoggedIn = useSelector(state => state.auth.isAuthenticated)\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const navigate = useHistory();\r\n  const dispatch = useDispatch();\r\n\r\n  const enterEmailInputRef = useRef();\r\n  const enterPasswordInputRef = useRef();\r\n  const enterConfirmPasswordRef = useRef();\r\n\r\n  const SwitchHandler = () => {\r\n    setIsLogin((prevent) => !prevent);\r\n  };\r\n\r\n  const onSubmitHandler = (event) => {\r\n    event.preventDefault();\r\n    const enteredEmail = enterEmailInputRef.current.value;\r\n    const enteredPassword = enterPasswordInputRef.current.value;\r\n    //const enteredConfirmPassword = enterConfirmPasswordRef.current.value;\r\n    //dispatch(authActions.login());\r\n    setIsLoading(true);\r\n    //let url;\r\n    if (isLogin) {\r\n      fetch(\r\n        \"https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyDYe7rxDYbi7WgXlIL3QX92DmYYVyXFWho\",\r\n        {\r\n          method: \"POST\",\r\n          body: JSON.stringify({\r\n            email: enteredEmail,\r\n            password: enteredPassword,\r\n            // passwordE: enteredConfirmPassword,\r\n            returnSecureToken: true,\r\n          }),\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        }\r\n      )\r\n        .then((res) => {\r\n          setIsLoading(false);\r\n          if (res.ok) {\r\n            return res.json();\r\n          } else {\r\n            return res.json().then((data) => {\r\n              let errorMessage = \"Authentication failed\";\r\n              //   if (data && data.error && data.error.message){\r\n              //         errorMessage = data.error.message;\r\n              //   }\r\n\r\n              throw new Error(errorMessage);\r\n            });\r\n          }\r\n        })\r\n        .then((data) => {\r\n          //console.log(data);\r\n\r\n          dispatch(authSliceActions.login(data.idToken));\r\n          navigate.push(\"/\");\r\n        })\r\n        .catch((err) => {\r\n          alert(err.message);\r\n        });\r\n    } else {\r\n      fetch(\r\n        \"https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyDYe7rxDYbi7WgXlIL3QX92DmYYVyXFWho\",\r\n        {\r\n          method: \"POST\",\r\n          body: JSON.stringify({\r\n            email: enteredEmail,\r\n            password: enteredPassword,\r\n            // passwordE: enteredConfirmPassword,\r\n            returnSecureToken: true,\r\n          }),\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        }\r\n      )\r\n        .then((res) => {\r\n          setIsLoading(false);\r\n          if (res.ok) {\r\n            // return res.json();\r\n          } else {\r\n            return res.json().then((data) => {\r\n              let errorMessage = \"Authentication failed\";\r\n              //   if (data && data.error && data.error.message){\r\n              //         errorMessage = data.error.message;\r\n              //   }\r\n\r\n              throw new Error(errorMessage);\r\n            });\r\n          }\r\n        })\r\n        .then((data) => {\r\n          //console.log(data);\r\n          //dispatch(authActions.login(data.idToken));\r\n          //navigate.push(\"/navigation/home\");\r\n        })\r\n        .catch((err) => {\r\n          alert(err.message);\r\n        });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <section className={classes.authform}>\r\n      {/* <h1>{isLogin ? \"Login\" : \"Sign Up\"}</h1> */}\r\n      <form className={classes.form} onSubmit={onSubmitHandler}>\r\n        <div className={classes.form}>\r\n          <label htmlFor=\"email\">Email Id</label>\r\n          <input type=\"email\" id=\"email\" ref={enterEmailInputRef} required />\r\n        </div>\r\n        <div className={classes.form}>\r\n          <label htmlFor=\"password\">Password</label>\r\n          <input\r\n            type=\"password\"\r\n            id=\"password\"\r\n            ref={enterPasswordInputRef}\r\n            required\r\n          />\r\n        </div>\r\n        {!isLogin && (\r\n          <div className={classes.form}>\r\n            <label htmlFor=\"confirmpassword\">Comfirm Password</label>\r\n            <input\r\n              type=\"password\"\r\n              id=\"confirmpassword\"\r\n              ref={enterConfirmPasswordRef}\r\n              required\r\n            />\r\n          </div>\r\n        )}\r\n        <div className={classes.action}>\r\n          <br></br>\r\n          {!isLoading && (\r\n            <button>{isLogin ? \"Login\" : \"Create Account\"}</button>\r\n          )}\r\n          <br></br>\r\n          {isLoading && <p>Sending request...</p>}\r\n          <button type=\"button\" onClick={SwitchHandler}>\r\n            {isLogin ? \"Create new account\" : \"Login with existing account\"}\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default AuthForm;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}